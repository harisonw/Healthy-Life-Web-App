• How do you propose the user would interact with the HLSP using JavaScript? 
The user doesn’t see the JavaScript. It is loaded when the user loads the page in their browser. Then depending on the implementation, the JavaScript is either ran automatically to add to the page or it is run as the user interacts with a page. For example, when they click a button.

• During your implementation, what advantages/disadvantages have you found 
regarding the dynamically typed characteristic of JavaScript? 
Advantages:
•	Don’t have to change or cast type of an int to display it in a string you can just use the + operator and it will work. – Reduces time and effort it takes to code.


Disadvantages:
•	Vague error messages can make it harder to find errors compared to statically typed languages. – Increases time to debug broken code
•	Less meaningful code completion / suggestions in the IDE. – Increases the probability of making a mistake
•	IDE doesn’t highlight where / what the error is as well as it does for statically typed languages.

• What elements of the Document Object Model (DOM) have you used to read 
and modify your HTML pages in the HLSP? 
I have used many elements of the DOM to read and modify my HTML pages. For example, I have used an event listener attached to the ‘DOMContentLoaded’ function to ensure my JS isn’t run before the DOM is loaded. I have also used function such as getElementById to get elements from the DOM and either manipulate them or add functions to be run when they are interacted with. For example, I have also used the innerHTML property to change the text of an element and the style property to change the style of an element. Also I have used the appendChild function to add elements to the DOM.

• What tool(s) have you used to fix errors in your JavaScript code? 
I have used the console in Edge's dev tools to fix errors in my JavaScript code as well as the debugger in Edge to step through my code and see what is happening. 


• Where did you use Event Driven Programming to trigger JavaScript 
dynamically in the HLSP? 
I used event driven programming to trigger JavaScript dynamically in the HLSP in the following ways:
•	When the user clicks on the save button on the profile page the JavaScript will run to save the user’s profile information.
•	When the user clicks on the 2FA button on the profile page the JavaScript will run to get the user's 2FA secret and display it to the user then again after the user enters a 2FA code to verify it and update the database to say the user has successfully set up 2FA.
•	When the user clicks on the login button on the login page the JavaScript will run to check the user's credentials with the backend API and then either log them in if they are correct or display an error message if they are not.
•	When the user clicks on the register button on the register page the JavaScript will run to check the user's credentials with the backend API and then either register them if the are valid or display an error message if they are not.
•	When functions are run after the DOM is loaded such as the function to add articles to the cards on the home page


• How did you test your JavaScript code? Did you use a JavaScript framework 
(e.g., Mocha)? What was your testing strategy? 
I used the console in Edge's dev tools to test my JavaScript code. I would run the code and then check the console to see if there were any errors. If there were errors or the function didn't work as expected I would make amendments to the code.
I wrote my backend api first  and then used postman to test my API endpoints to ensure they were working as expected. Then I could be confident that is was the front end JS that wasn't correct when coding.

2.1Unit 4. Node.js. 

• What is your proposal to use the Node.js execution environment as a Web 
Server? 
I used Node.js as the web server to serve static files such as the HTML, CSS and JavaScript files using Express. This highlights a big advantage of Node which is that it has a large package library to use which can help you code and implement things faster. For example I also used the JWT package to create JSON Web Tokens.
I also used Node.js to run the backend API that would handle the requests from the front end and also update the mongo database.
Node.js uses the JavaScript runtime environment and I can use it to run JavaScript code on the server side.
This means that I can use the same language for both the front end and the back end which saves time as I only have to learn one language and it also make it easier to reuse and maintain code.

• What features/services will be provided by the server? 
• Connection to the Mogno database
• User API endpoints to handle requests from the front end for things such as logging in, registering, getting articles, saving articles, getting user profile information, saving user profile information, setting up 2FA, verifying 2FA code, etc.
• Articles API endpoints to handle requests from the front end for things such as getting articles.
• Posts API endpoints to handle requests from the front end for things such as getting posts, saving posts, etc.
• Serve static files such as HTML, CSS and JavaScript files

• What are the advantages/disadvantages of using Express as a Web Application 
Server to build web applications and services in Node.js?
Advantages:
•	Express is a popular framework which means there is a lot of material online to help you learn it.
• Node.JS / express is fast because it is non-blocking and asynchronous which means it can handle a lot of requests at the same time.
• Node.JS has many other packages that can be used to help you code and implement things faster.


Disadvantages:
• Sometimes there can be so much material and so many approaches to solving a problem that it can be hard to know what is the best way to do something.


• What database (e.g., MongoDB, MySQL, Oracle) have you selected to achieve 
data persistency in the HLSP? 
I have selected MongoDB as the database to achieve data persistency in the HLSP.
I chose MongoDB because it is a NoSQL database which means it is a document database.
This means that it is a good fit for the HLSP as the data is not relational and it is easier to store and retrieve data from a document database.
Also MongoDB is a popular database which means there is a lot of material online to help you learn it and Node has the package Mongoose which makes it easy to connect to MongoDB and use it in Node.

• What are the advantages/disadvantages of your selected database to offer data 
persistence in the HLSP?
Advantages:
•	NoSQL databases are easier to use and also scale than relational databases.
• Node has the package Mongoose which makes it easy to connect to MongoDB and use it in Node.
• MongoDB is a popular database which means there is a lot of material online to help you learn it.

Disadvantages:
• Had to learn about NoSQL databases and MongoDB which took time.
• MongoDB is not a relational database so it is not a good fit for the HLSP if the data was relational.
• Couldn't store the post images in MongoDB as they are too large so I had to use a the file system to store them and then store the path to the image in MongoDB.
